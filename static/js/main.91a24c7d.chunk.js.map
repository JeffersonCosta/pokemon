{"version":3,"sources":["components/Pokemon/Pokemon.tsx","components/Pokemon/index.ts","services/pokeApi.ts","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","paper","padding","spacing","textAlign","color","palette","text","secondary","media","height","backgroundSize","backgroundColor","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","red","chip","margin","progressBar","flex","borderRadius","statName","paddingRight","baseStatName","width","display","boxProgress","subName","pokemonName","fontFamily","Pokemon","pokemon","classes","React","useState","loadingPokemonDetails","setLoadingPokemonDetails","pokemonDetails","setPokemonDetails","useEffect","url","axios","get","then","response","data","catch","error","console","log","Grid","item","xs","sm","Card","Skeleton","variant","CardMedia","className","image","Object","keys","length","sprites","other","dream_world","front_default","title","name","CardContent","Typography","gutterBottom","component","align","id","Box","marginY","abilities","map","ability","index","Chip","size","label","stats","stat","alignItems","base_stat","LinearProgress","value","pokeApi","baseURL","headers","root","flexGrow","input","minWidth","container","paddingTop","App","count","next","previous","results","setResults","setPokemon","pokemons","setPokemons","typeSearch","setTypeSearch","search","setSearch","handleSearchPokemonsByDefault","prevState","handleSearch","pokemonsEncounters","pokemon_encounters","pokemonItem","Fragment","CssBaseline","AppBar","position","Toolbar","justifyContent","TextField","select","onChange","event","target","MenuItem","placeholder","disabled","type","Button","onClick","SearchOutlined","Container","maxWidth","style","overflow","dataLength","hasMore","loader","CircularProgress","endMessage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91a24c7d.chunk.js","sourcesContent":["import { Box, Card, CardActions, CardContent, CardMedia, Chip, Collapse, Grid, LinearProgress, Typography } from \"@material-ui/core\";\nimport { red } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Skeleton } from \"@material-ui/lab\";\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport React, { useEffect, useState } from 'react';\nimport IPokemon from '../../types/IPokemon';\n\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    media: {\n        padding: 0,\n        height: 200,\n        backgroundSize: 'auto 80%',\n        backgroundColor: '#F2F2F2',\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n    chip: {\n        margin: 2\n    },\n    progressBar: {\n        flex: 1,\n        height: 10,\n        borderRadius: 2\n    },\n    statName: {\n        flex: '50% 0 0',\n        paddingRight: 10,\n        margin: 0,\n        color: '#777',\n        textAlign: \"right\"\n    },\n    baseStatName: {\n        color: '#115293',\n        width: 30,\n        display: 'inline-block'\n    },\n    boxProgress: {\n        margin: '5px 0'\n    },\n    subName: {\n        color: '#999'\n    },\n    pokemonName: {\n        fontFamily: 'Righteous, Raleway, Arial',\n    }\n}));\n\ninterface Props {\n    pokemon: IPokemon\n}\n\nconst Pokemon: React.FC<Props> = ({ pokemon }) => {\n\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    }\n\n    const [loadingPokemonDetails, setLoadingPokemonDetails] = useState(false);\n    const [pokemonDetails, setPokemonDetails] = useState<any>({});\n\n    useEffect(() => {\n\n        setLoadingPokemonDetails(true);\n\n        if (pokemon.url) {\n\n            axios\n                .get<any>(pokemon.url)\n                .then(response => {\n                    \n                    setPokemonDetails(response.data);\n                    setLoadingPokemonDetails(false);\n                })\n                .catch(error => {\n                    console.log(error);\n                    setLoadingPokemonDetails(false);\n                });\n        }\n\n    }, [pokemon.url]);\n\n    return (\n        <Grid item xs={12} sm={4}>\n            <Card>\n                {\n                    loadingPokemonDetails\n                        ? <Skeleton variant=\"rect\" width=\"100%\" height={200} />\n                        : <CardMedia\n                            className={classes.media}\n                            image={Object.keys(pokemonDetails).length ? pokemonDetails.sprites.other.dream_world.front_default : 'https://img1.gratispng.com/20171220/kqw/pokeball-png-5a3a4a7e247ce7.9167778215137695981495.jpg'}\n                            title={`Pokemón ${pokemon.name}`}\n                        />\n                }\n\n                <CardContent>\n\n                    <Typography gutterBottom variant=\"h4\" component=\"h2\" align=\"center\" className={classes.pokemonName}>\n                        {pokemon.name} <span className={classes.subName}>Nº{pokemonDetails.id}</span>\n                    </Typography>\n\n                    <Box marginY={2}>\n                        Abilities: \n                        {\n                            loadingPokemonDetails\n                                ? <Skeleton variant=\"text\" />\n                                : Object.keys(pokemonDetails).length && pokemonDetails.abilities.map((ability: any, index: number) => \n                                    <Chip className={classes.chip} color=\"secondary\" size=\"medium\" key={index} label={ability.ability.name} />\n                                )\n                        }\n                    </Box>\n\n                    <Box marginY={2}>\n                        {\n                            Object.keys(pokemonDetails).length && pokemonDetails.stats.map((stat: any, index: number) =>\n                                <Box key={index} display=\"flex\" alignItems=\"center\" className={classes.boxProgress}>\n                                    <p className={classes.statName}>\n                                        {stat.stat.name} \n                                        <strong className={classes.baseStatName}>{stat.base_stat}</strong>\n                                    </p> \n                                    <LinearProgress className={classes.progressBar} variant=\"determinate\" value={stat.base_stat} />\n                                </Box>\n                            )\n                        }\n                    </Box>\n                </CardContent>\n                {/* <CardActions disableSpacing>\n                    <IconButton\n                        className={clsx(classes.expand, {\n                            [classes.expandOpen]: expanded,\n                        })}\n                        onClick={handleExpandClick}\n                        aria-expanded={expanded}\n                        aria-label=\"show more\"\n                    >\n                        <ExpandMoreIcon />\n                    </IconButton>\n                </CardActions>\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent>\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Explicabo, eum in libero adipisci repudiandae, error, autem consequatur commodi illum vel unde velit inventore ipsum labore! Cumque eaque repellendus sunt provident.\n                    </CardContent>\n                </Collapse> */}\n            </Card>\n            {/* <strong>nome: {pokemon.name}</strong>\n                <div>\n                    {\n                        loadingPokemonDetails\n                            ? <p>Caregando detalhes do pokemón</p>\n                            : Object.keys(pokemonDetails).length && <img src={pokemonDetails.sprites.back_default} alt={`Pokemón ${pokemon.name}`} />\n                    }\n                </div> */}\n        </Grid>\n    )\n}\n\nexport default Pokemon;","import Pokemon from \"./Pokemon\";\nexport default Pokemon;","import axios from \"axios\";\n\nconst pokeApi =  axios.create({\n    baseURL: 'https://pokeapi.co/api/v2',\n    headers: { 'Content-Type': 'Application/json' }\n});\n\nexport default pokeApi;","import { AppBar, Box, Button, CircularProgress, Container, CssBaseline, Grid, MenuItem, TextField, Toolbar, useScrollTrigger } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { SearchOutlined } from '@material-ui/icons';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Pokemon from './components/Pokemon';\nimport pokeApi from './services/pokeApi';\nimport IPagination from './types/IPagination';\nimport IPokemon from './types/IPokemon';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n\troot: {\n\t\tflexGrow: 1,\n\t\tfontFamily: 'Righteous, Raleway, Arial',\n\t},\n\tinput: {\n\t\tmargin: 10,\n\t\tminWidth: 200,\n\t},\n\tcontainer: {\n\t\tpaddingTop: 20\n\t}\n}));\n\nfunction ElevationScroll({ children, window }: any) {\n\n\tconst trigger = useScrollTrigger({\n\t\tdisableHysteresis: true,\n\t\tthreshold: 0,\n\t\ttarget: window ? window() : undefined,\n\t});\n\n\treturn React.cloneElement(children, {\n\t\televation: trigger ? 4 : 0,\n\t});\n}\n\nElevationScroll.propTypes = {\n\tchildren: PropTypes.element.isRequired,\n\twindow: PropTypes.func,\n};\n\nconst App = () => {\n\n\tconst classes = useStyles();\n\n\tconst [results, setResults] = useState<IPagination>({\n\t\tcount: 0,\n\t\tnext: 'pokemon?limit=10&offset=200',\n\t\tprevious: '',\n\t\tresults: []\n\t});\n\n\tconst [pokemon, setPokemon] = useState<IPokemon>({});\n\tconst [pokemons, setPokemons] = useState<Array<IPokemon>>([]);\n\tconst [typeSearch, setTypeSearch] = useState('default');\n\tconst [search, setSearch] = useState('');\n\n\tconst handleSearchPokemonsByDefault = () => {\n\n\t\tpokeApi\n\t\t\t.get<IPagination>(results.next)\n\t\t\t.then(response => {\n\n\t\t\t\tsetResults(prevState => {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tresults: [...prevState.results, ...response.data.results],\n\t\t\t\t\t\tnext: response.data.next,\n\t\t\t\t\t\tcount: response.data.count,\n\t\t\t\t\t\tprevious: response.data.previous,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error => {\n\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}\n\n\tconst handleSearchPokemonByName = () => {\n\n\t\tpokeApi\n\t\t\t.get<any>(`pokemon/${search}`)\n\t\t\t.then(response => {\n\n\t\t\t\tsetPokemon({\n\t\t\t\t\tname: response.data.name,\n\t\t\t\t\turl: `https://pokeapi.co/api/v2/pokemon/${response.data.id}/`\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error => {\n\n\t\t\t\tsetPokemon({});\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}\n\n\tconst handleSearchPokemonByLocationArea = () => {\n\n\t\tpokeApi\n\t\t\t.get<any>(`location-area/${search}`)\n\t\t\t.then(response => {\n\n\t\t\t\tconst pokemonsEncounters = response.data.pokemon_encounters.map((pokemonItem: any) => pokemonItem.pokemon);\n\t\t\t\tsetPokemons(pokemonsEncounters);\n\t\t\t})\n\t\t\t.catch(error => {\n\n\t\t\t\tsetPokemons([]);\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}\n\n\tconst handleSearch = () => {\n\n\t\tif (typeSearch === 'by-area' && search.length > 0) {\n\n\t\t\thandleSearchPokemonByLocationArea();\n\t\t} else if (typeSearch === 'by-name' && search.length > 0) {\n\n\t\t\thandleSearchPokemonByName();\n\t\t} else if (typeSearch === 'default') {\n\n\t\t\thandleSearchPokemonsByDefault();\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\thandleSearch();\n\t}, []);\n\n\treturn (\n\n\t\t<React.Fragment>\n\t\t\t<CssBaseline />\n\n\t\t\t<div className={classes.root}>\n\n\t\t\t\t<AppBar position=\"fixed\" color=\"inherit\">\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\t\t\t\tlabel=\"Pesquisar por\"\n\t\t\t\t\t\t\t\t\t\tvalue={typeSearch}\n\t\t\t\t\t\t\t\t\t\tonChange={event => setTypeSearch(event.target.value)}\n\t\t\t\t\t\t\t\t\t\tvariant=\"standard\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<MenuItem key=\"default\" value=\"default\">\n\t\t\t\t\t\t\t\t\t\t\tListar todos\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t<MenuItem key=\"by-area\" value=\"by-area\">\n\t\t\t\t\t\t\t\t\t\t\tPor área\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t<MenuItem key=\"by-name\" value=\"by-name\">\n\t\t\t\t\t\t\t\t\t\t\tPor nome\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t</TextField>\n\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Pesquisar...\"\n\t\t\t\t\t\t\t\t\t\tvalue={search}\n\t\t\t\t\t\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\t\t\t\t\t\tsetSearch(event.target.value)\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tdisabled={typeSearch === 'default'}\n\t\t\t\t\t\t\t\t\t\tlabel=\"Digite aqui...\"\n\t\t\t\t\t\t\t\t\t\ttype=\"search\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"standard\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Box display=\"flex\" alignItems=\"center\">\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleSearch}\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<SearchOutlined />\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t<Toolbar />\n\t\t\t\t<Container maxWidth=\"lg\" className={classes.container}>\n\n\t\t\t\t\t{\n\t\t\t\t\t\ttypeSearch === 'default'\n\t\t\t\t\t\t&& <InfiniteScroll\n\t\t\t\t\t\t\tstyle={{ overflow: 'inherit' }}\n\t\t\t\t\t\t\tdataLength={results.results.length}\n\t\t\t\t\t\t\tnext={handleSearchPokemonsByDefault}\n\t\t\t\t\t\t\thasMore={results.next.length ? true : false}\n\t\t\t\t\t\t\tloader={<CircularProgress />}\n\t\t\t\t\t\t\tendMessage={\n\t\t\t\t\t\t\t\t<p style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t\t<b>Yay! You have seen it all</b>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tresults.results.map((pokemon, index) => (\n\t\t\t\t\t\t\t\t\t\t<Pokemon pokemon={pokemon} key={index} />\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</InfiniteScroll>\n\t\t\t\t\t}\n\t\t\t\t\t<Grid container spacing={3}>\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttypeSearch === 'by-name'\n\t\t\t\t\t\t\t&& (\n\t\t\t\t\t\t\t\tObject.keys(pokemon).length\n\t\t\t\t\t\t\t\t\t? <Pokemon pokemon={pokemon} />\n\t\t\t\t\t\t\t\t\t: <p>Nenhum pokemon encontrado para o nome \"{search}\"</p>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttypeSearch === 'by-area'\n\t\t\t\t\t\t\t&& (\n\t\t\t\t\t\t\t\tpokemons.length\n\t\t\t\t\t\t\t\t\t? pokemons.map((pokemon, index) => <Pokemon pokemon={pokemon} key={index} />)\n\t\t\t\t\t\t\t\t\t: <p>Nenhum pokemon encontrado para área \"{search}\"</p>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Container>\n\t\t\t</div >\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.Fragment>\n\t\t<App />\n\t</React.Fragment>,\n\tdocument.getElementById('root')\n);"],"sourceRoot":""}